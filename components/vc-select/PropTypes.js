import PropTypes from '../_util/vue-types';

export const SelectPropTypes = {
  defaultActiveFirstOption: PropTypes.looseBool,
  multiple: PropTypes.looseBool,
  filterOption: PropTypes.any,
  // children: PropTypes.any,
  showSearch: PropTypes.looseBool,
  disabled: PropTypes.looseBool,
  allowClear: PropTypes.looseBool,
  showArrow: PropTypes.looseBool,
  tags: PropTypes.looseBool,
  prefixCls: PropTypes.string,
  // className: PropTypes.string,
  transitionName: PropTypes.string,
  optionLabelProp: PropTypes.string,
  optionFilterProp: PropTypes.string,
  animation: PropTypes.string,
  choiceTransitionName: PropTypes.string,
  open: PropTypes.looseBool,
  defaultOpen: PropTypes.looseBool,
  // onChange: PropTypes.func,
  // onBlur: PropTypes.func,
  // onFocus: PropTypes.func,
  // onSelect: PropTypes.func,
  // onSearch: PropTypes.func,
  // onPopupScroll: PropTypes.func,
  // onMouseEnter: PropTypes.func,
  // onMouseLeave: PropTypes.func,
  // onInputKeyDown: PropTypes.func,
  placeholder: PropTypes.any,
  // onDeselect: PropTypes.func,
  labelInValue: PropTypes.looseBool,
  loading: PropTypes.looseBool,
  value: PropTypes.any,
  defaultValue: PropTypes.any,
  dropdownStyle: PropTypes.object,
  dropdownClassName: PropTypes.string,
  maxTagTextLength: PropTypes.number,
  maxTagCount: PropTypes.number,
  maxTagPlaceholder: PropTypes.any,
  tokenSeparators: PropTypes.arrayOf(PropTypes.string),
  getInputElement: PropTypes.func,
  showAction: PropTypes.arrayOf(PropTypes.string),
  autofocus: PropTypes.looseBool,
  getPopupContainer: PropTypes.func,
  clearIcon: PropTypes.any,
  inputIcon: PropTypes.any,
  removeIcon: PropTypes.any,
  menuItemSelectedIcon: PropTypes.any,
  dropdownRender: PropTypes.func,
  mode: PropTypes.oneOf(['multiple', 'tags']),
  backfill: PropTypes.looseBool,
  dropdownAlign: PropTypes.any,
  dropdownMatchSelectWidth: PropTypes.looseBool,
  dropdownMenuStyle: PropTypes.object,
  notFoundContent: PropTypes.oneOfType([String, Number]),
  tabindex: PropTypes.oneOfType([String, Number]),
  __propsSymbol__: PropTypes.any,
  children: PropTypes.array,
};
