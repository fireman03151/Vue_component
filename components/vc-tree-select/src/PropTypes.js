import PropTypes from '../../_util/vue-types'
import { SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from './strategies'

export const SelectPropTypes = {
  // className: PropTypes.string,
  prefixCls: PropTypes.string,
  multiple: PropTypes.bool,
  filterTreeNode: PropTypes.any,
  showSearch: PropTypes.bool,
  disabled: PropTypes.bool,
  showArrow: PropTypes.bool,
  allowClear: PropTypes.bool,
  defaultOpen: PropTypes.bool,
  open: PropTypes.bool,
  transitionName: PropTypes.string,
  animation: PropTypes.string,
  choiceTransitionName: PropTypes.string,
  // onClick: PropTypes.func,
  // onChange: PropTypes.func,
  // onSelect: PropTypes.func,
  // onDeselect: PropTypes.func,
  // onSearch: PropTypes.func,
  searchPlaceholder: PropTypes.string,
  placeholder: PropTypes.any,
  inputValue: PropTypes.any,
  value: PropTypes.any,
  defaultValue: PropTypes.any,
  label: PropTypes.any, // vnode
  defaultLabel: PropTypes.any,
  labelInValue: PropTypes.bool,
  dropdownClassName: PropTypes.string,
  dropdownStyle: PropTypes.object,
  dropdownPopupAlign: PropTypes.object,
  dropdownVisibleChange: PropTypes.func,
  maxTagTextLength: PropTypes.number,
  showCheckedStrategy: PropTypes.oneOf([
    SHOW_ALL, SHOW_PARENT, SHOW_CHILD,
  ]),
  treeCheckStrictly: PropTypes.bool,
  treeIcon: PropTypes.bool,
  treeLine: PropTypes.bool,
  treeDefaultExpandAll: PropTypes.bool,
  treeDefaultExpandedKeys: PropTypes.arrayOf(String),
  treeCheckable: PropTypes.any, // bool vnode
  treeNodeLabelProp: PropTypes.string,
  treeNodeFilterProp: PropTypes.string,
  treeData: PropTypes.array,
  treeDataSimpleMode: PropTypes.oneOfType([
    PropTypes.bool,
    PropTypes.object,
  ]),
  loadData: PropTypes.func,
  dropdownMatchSelectWidth: PropTypes.bool,
  notFoundContent: PropTypes.any,
  children: PropTypes.any,
  autoFocus: PropTypes.bool,
  getPopupContainer: PropTypes.func,
  switcherIcon: PropTypes.func,
  inputIcon: PropTypes.any,
  removeIcon: PropTypes.any,
  clearIcon: PropTypes.any,
}
